
var express = require('express');  //express
var path = require('path'); //set path
var app = express();
var mongoose = require('mongoose'); //mongodb connector
var bodyParser = require('body-parser'); //http : post data paser(body)

//db connection
mongoose.connect("mongodb://test:test@ds021462.mlab.com:21462/smart01");
var db = mongoose.connection;
db.once("open", function() {
  console.log("DB connected !");
});

db.on("error", function(){
  console.log("DB ERROR:", err);
});

//server on
app.listen(2000, function(){
  console.log('Server On!');
});

//create db schema
var postSchema = mongoose.Schema({
  title: {type:String, required:true},
  body: {type:String, required:true},
  createdAt: {type:Date, default:Date.now},
  updatedAt: Date
});

//create Model  --> collection name : post // for Schema : postSchema
var Post = mongoose.model('post', postSchema);

// linking
app.set("view engine", 'ejs');
app.use(express.static(path.join(__dirname, 'public')));
app.use(bodyParser.json());

//root route
app.get('/', function(req, res){
  res.render('index');
});

//set route
app.get('/posts', function(req, res){
  Post.find({}, function(err, posts){
    if(err) return res.json({success:false, message:err});
    res.json({success:true, data:posts});
  });
}); // index

app.post('/posts', function(req, res){
  Post.create(req.body.post, function(err, post){
    if(err) return res.json({success:false, message:err});
    res.json({success:true, data:post});
  });
}); // create

app.get('/posts/:id', function(req, res){
  Post.findById(req.params.id, function(err, post){
    if(err) return res.json({success:false, message:err});
    res.json({success:true, data:post});
  });
}); // show

app.put('/posts/:id', function(req, res){
    req.body.post.updatedAt=Date.now();
    Post.findByIdAndUpdate(req.params.id, req.body.post, function(err, post){
      if(err) return res.json({success:false, message:err});
      res.json({success:true, message:post._id+"update"});
    });
  }); //update

  app.delete('/posts/:id', function(req, res){
    Post.findByIdAndRemove(req.params.id, function(err, post){
      if(err) return res.json({success:false, message:err});
      res.json({success:true, message:post._id+"deleted"});
    });
  });  //delete
